(info: Thread milling)
(authors : Fernand Veilleux, Philip Mullen)

o<thread-milling> sub

(call cx al_x cy al_y maj_diam min_diam pitch units starts rot option cut_dir cut_start cut_depth preview debug)

	#<units> = #8
	(convert size to machine units)
	o10 if [#<_metric>] (machine units)
		o11 if [#<units> EQ 1] (inch threads)
			#<maj_diam> = [25.4 * #5]
			#<min_diam> = [25.4 * #6]
			#<pitch>    = [25.4 / #7]
		o11 else
			#<maj_diam> = #5
			#<min_diam> = #6
			#<pitch>    = #7
		o11 endif
	o10 else (imperial machine units)
		o12 if [#<units> EQ 0] (metric threads)
			#<maj_diam> = [#5 / 25.4]
			#<min_diam> = [#6 / 25.4]
			#<pitch>    = [#7 / 25.4]
		o12 else
			#<maj_diam> = #5
			#<min_diam> = #6
			#<pitch>    = [1 / #7] (1 divide by threads per inch)
		o12 endif
	o10 endif

	#<al_x>         = #2
	#<al_y>         = #4
	o<select> CALL [33] [#<al_x>] [#<maj_diam> / 2] [0] [-#<maj_diam> / 2]
	#<cx> = [#1 + #33]
	o<select> CALL [33] [#<al_y>] [-#<maj_diam> / 2] [0] [#<maj_diam> / 2]
	#<cy> = [#3 + #33]

	#<starts>       = #9
	#<rot>          = #10
	#<option>       = #11
	#<cut_dir>      = #12
	#<cut_start>    = #13
	#<cut_depth>    = #14
	#<preview>      = #15

    #<helix_debug>  = #14 (not used)

	o2010 if [#<_tool_dynamic_dia> GT 0.0]
		#<tool_dia> = #<_tool_dynamic_dia>
	o2010 else
		#<tool_dia> = #5410
	o2010 endif

    #<tool_rad>     = [#<tool_dia> / 2]

    o<tool_chk> if [[#<option> EQ 2] AND [#<tool_dia> GE #<min_diam>]]
        o<thread-milling> return
    o<tool_chk> endif

    #<old_coord_system> = [#<_coord_system> / 10]
    o<get_offsets> CALL
    #<saved_offset_x> = #<_offsets_x>
    #<saved_offset_y> = #<_offsets_y>
    #<saved_offset_z> = #<_offsets_z>
    #<saved_offset_r> = #<_offsets_r>

    G#<_off_rot_coord_system>
    o<rotate_xy> CALL [#<_offsets_x> + #<cx>] [#<_offsets_y> + #<cy>] [#<_offsets_x>] [#<_offsets_y>] [#<_offsets_r>]
    G10 L2 P#5220 X#<_rotated_x> Y#<_rotated_y> Z#<_offsets_z> R[#<_offsets_r> + #<rot>]

    #<pdist> = 0
    #<current_step> = 0
    o<set_spindle_rpm> CALL [#<_rpm_normal>]

    o<cut_mode> if [#<option> EQ 2]
        #<pdist> = [[#<min_diam> / 2] - #<tool_rad> - #<_thread_lead_in>]
    o<cut_mode> else
        #<pdist> = [[#<maj_diam> / 2] + #<tool_rad> + #<_thread_lead_in>]
    o<cut_mode> endif
	#<cut_steps> = [[[#<maj_diam> - #<min_diam>] / 2] / #<_thread_cut_depth>]

    #<pangle> = [360 / #<starts>]
    #<start_counter> = 0

    #<total_turns> = [[[ABS[#<cut_depth>] + #<cut_start>] / #<pitch>] / #<_thread_cut_teeth>]

    o<threadmill_check> if [[#<total_turns> LT 1] AND [#<_thread_cut_teeth> GT 1]]
        #<total_turns> = 1
    o<threadmill_check> endif

    #<part_turns> = ABS[#<total_turns> - FIX[#<total_turns>]]
    #<full_turns> = [#<total_turns> - #<part_turns>]
    #<p_turn_height> = [#<part_turns> * #<pitch>]
    #<f_turn_height> = [#<full_turns> * #<pitch>]

    #<helix_f_bottom> = [#<cut_depth>]
    #<helix_f_top> = [[#<helix_f_bottom>] + #<f_turn_height>]

    o<full_turn_check> if [#<full_turns> GE 1]
        #<helix_p_bottom> = #<helix_f_top>
    o<full_turn_check> else
        #<helix_p_bottom> = #<cut_depth>
    o<full_turn_check> endif

    #<helix_p_top> = [#<helix_p_bottom> + #<p_turn_height>]

    G0 Z#<_rapid_z>
    G90.1

	o<start_loop> while [#<start_counter> LT #<starts>]
		#<current_step> = 0

		o<cut_loop> while [#<current_step> LT #<cut_steps>]
			#<cut_angle> = [#<pangle> * #<start_counter>]

			G0 @#<pdist> ^#<cut_angle>

			o<lvl_check> if [[[#<cut_steps> - #<current_step>] LT 1] AND [[#<cut_steps> - #<current_step>] GT 0]]
				#<current_step> = [#<cut_steps>]
			o<lvl_check> else
				#<current_step> = [#<current_step> + 1]
			o<lvl_check> endif

			o<cut_side> if [#<option> EQ 2]
				#<cut_offset> = [[[#<min_diam> / 2] - #<tool_rad>] + [#<current_step> * [#<_thread_cut_depth>]]]
					o<cut_side> else
				#<cut_offset> = [[[#<maj_diam> / 2] + #<tool_rad>] - [#<current_step> * [#<_thread_cut_depth>]]]
			o<cut_side> endif

			#<finish_ang> = [[#<part_turns> * 360] + #<cut_angle>]

			o<full_turn> if [#<full_turns> GE 1]
				G0 Z[#<helix_f_bottom>]
				G1 @[#<cut_offset>] ^#<cut_angle> F[#<_selected_feed>]
				G[#<cut_dir>] Z[#<helix_f_top>] P[#<full_turns>] I0 J0
			o<full_turn> else
				G0 Z[#<helix_f_bottom>]
				G1 @[#<cut_offset>] ^#<cut_angle> F[#<_selected_feed>]
			o<full_turn> endif

			o<partial_turn> if [#<part_turns> GT 0]
				G#<cut_dir> @#<cut_offset> ^#<finish_ang> Z[#<helix_p_top>] I0 J0
			o<partial_turn> endif

			G1 @#<pdist> ^#<finish_ang> F#<_selected_feed>
			G0 Z#<_rapid_z>
		o<cut_loop> endwhile

        /o<draw_preview_int> if [#<preview>]
			/#<pre_total_turns> = [[[ABS[#<cut_depth>] + #<cut_start>] / #<pitch>]]
			/#<pre_part_turns> = ABS[#<pre_total_turns> - FIX[#<pre_total_turns>]]

			/o<pre_threadmill_check> if [[#<pre_total_turns> LT 1] AND [#<_thread_cut_teeth> GT 1]]
				/#<pre_total_turns> = 1
			/o<pre_threadmill_check> endif

			/#<pre_full_turns>    = [#<pre_total_turns> - #<pre_part_turns>]
			/#<pre_p_turn_height> = [#<pre_part_turns>  * #<pitch>]
			/#<pre_f_turn_height> = [#<pre_full_turns>  * #<pitch>]
			/#<pre_helix_f_top>   = [#<helix_f_bottom>  + #<pre_f_turn_height>]
			/#<pre_helix_p_top>   = [#<pre_helix_f_top> + #<pre_p_turn_height>]

			/o<pre_full_turn> if [#<full_turns> GE 1]
				/G0 Z[#<helix_f_bottom>]
				/G0 @[#<maj_diam> / 2] ^[#<pangle> * #<start_counter>]
				/G#<cut_dir> Z[#<pre_helix_f_top>] P#<pre_full_turns> I0 J0
			/o<pre_full_turn> else
				/G0 Z[#<helix_f_bottom>]
				/G0 @[[#<maj_diam>] / 2] ^#<cut_angle> F[#<_selected_feed>]
			/o<pre_full_turn> endif

			/#<finish_ang> = [[#<part_turns> * 360] - #<cut_angle>]

			/o<partial_turn_preview> if [#<part_turns> GT 0]
			/G#<cut_dir> @[[#<maj_diam>] / 2] ^#<finish_ang> Z[#<pre_helix_p_top>]  I0 J0
			/o<partial_turn_preview> endif
		/o<draw_preview_int> endif

		#<start_counter> = [#<start_counter> + 1]
	o<start_loop> endwhile
	G91.1

	G#<old_coord_system>
	G10 L2 P#5220 X#<saved_offset_x> Y#<saved_offset_y> Z#<saved_offset_z> R#<saved_offset_r>

o<thread-milling> endsub
