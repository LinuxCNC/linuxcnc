# Jog Pendant
loadrt encoder num_chan=1
loadrt mux4 count=1
addf encoder.update-counters servo-thread
addf mux4.0 servo-thread

# For velocity mode, set to 1
# In velocity mode the axis stops when the dial is stopped
# even if that means the commanded motion is not completed,
# For position mode (the default), set to 0
# In position mode the axis will move exactly jog-scale
# units for each count, regardless of how long that might take,
setp axis.x.jog-vel-mode 0
setp axis.y.jog-vel-mode 0
setp axis.z.jog-vel-mode 0
setp axis.a.jog-vel-mode 0

# This sets the scale that will be used based on the input to the mux4
setp mux4.0.in0 0.001
setp mux4.0.in1 0.01
setp mux4.0.in2 0.1

# The inputs to the mux4 component
net scale_0 mux4.0.sel0
net scale_1 mux4.0.sel1

# The output from the mux4 is sent to each axis jog scale
net mpg-scale <= mux4.0.out
net mpg-scale => axis.x.jog-scale
net mpg-scale => axis.y.jog-scale
net mpg-scale => axis.z.jog-scale
net mpg-scale => axis.a.jog-scale

# The encoder output counts to the axis. Only the selected axis will move.
#net encoder-counts  <= hm2_7i96.0.encoder.00.count-latched
net encoder-counts => axis.x.jog-counts
net encoder-counts => axis.y.jog-counts
net encoder-counts => axis.z.jog-counts
net encoder-counts => axis.a.jog-counts
